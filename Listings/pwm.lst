C51 COMPILER V9.59.0.0   PWM                                                               04/17/2021 21:56:59 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\pwm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Core\Src\pwm.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Core\Inc) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\pwm.lst) OBJECT(.\Objects\pwm.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    PWM.H
   4            * @author  PineconePi (BTA-16 And xdd_core)
   5            * @version V1.0.0
   6            * @date    20-February-2019
   7            * @brief  This document is used for PWM configuration
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            *
  12            *  
  13            * 
  14            * 
  15            * 
  16            * 
  17            *
  18            * 
  19            ******************************************************************************
  20          **/
  21          #include "pwm.h"
  22          
  23          PWM_InitTypeDef wheel_pwm = {PWM_Channel1, 0, 12500};
  24          PWM_InitTypeDef server_pwm = {PWM_Channel1, 147.5, 100};
  25          
  26          //========================================================================
  27          // Function:void PWM_CLK_Output(unsigned char PWM_Number,PWM_InitTypeDef *PWMx)|函数: void PWM_CLK_Output(
             -unsigned char PWM_Number,PWM_InitTypeDef *PWMx)
  28          // Description:PWM module output function|描述: PWM模块输出函数
  29          // Parameters: PWM_Number (PWM module number parameter range: 0-7)
  30          //             * PWMx: See PWM.h for details
  31          // 参数: PWM_Number             (PWM模块编号 参数范围：0~7)
  32          //       *PWMx：详情见PWM.h
  33          //       
  34          //       
  35          // Return:|返回: 
  36          // Version:VER1.0.0|版本: VER1.0.0
  37          // Date:2021-04-16|日期: 2021-04-16
  38          // Author: sky-vocality|作者: sky-vocality
  39          // Note:|备注:
  40          //      
  41          //      
  42          //      
  43          //      
  44          //      
  45          //========================================================================
  46          void PWM_CLK_Output(unsigned char PWM_Number,PWM_InitTypeDef *PWMx)
  47          { 
  48   1              float PWM_Buf = 0,PWM_Pre = 0,PWM_Value;
  49   1              PWM_Buf = ( 1500000 / PWMx->PWM_Frequency );
  50   1              PWM_Value = 1000 - PWMx->PWM_Value;
  51   1              PWM_Pre = (PWM_Value/1000);
  52   1              P_SW2 = 0x80;                                                                                                                           //Allow access to extended RAM (STC added)|允许访问扩展RAM（STC新增）
  53   1              PWMCKS = 0x0f;                                                                                                                     //System Clock 16 Dividing Frequency|系统时钟16分频
C51 COMPILER V9.59.0.0   PWM                                                               04/17/2021 21:56:59 PAGE 2   

  54   1              PWMC = PWM_Buf; 
  55   1              switch(PWM_Number)
  56   1              {
  57   2                      case 0 : PWM0T1 = 0x0000;PWM0T2 = PWM_Buf*PWM_Pre;PWM0CR= 0x80|PWMx->PWM_Channelx;break;
  58   2                      case 1 : PWM1T1 = 0x0000;PWM1T2 = PWM_Buf*PWM_Pre;PWM1CR= 0x80|PWMx->PWM_Channelx;break;
  59   2                      case 2 : PWM2T1 = 0x0000;PWM2T2 = PWM_Buf*PWM_Pre;PWM2CR= 0x80|PWMx->PWM_Channelx;break;
  60   2                      case 3 : PWM3T1 = 0x0000;PWM3T2 = PWM_Buf*PWM_Pre;PWM3CR= 0x80|PWMx->PWM_Channelx;break;
  61   2                      case 4 : PWM4T1 = 0x0000;PWM4T2 = PWM_Buf*PWM_Pre;PWM4CR= 0x80|PWMx->PWM_Channelx;break;
  62   2                      case 5 : PWM5T1 = 0x0000;PWM5T2 = PWM_Buf*PWM_Pre;PWM5CR= 0x80|PWMx->PWM_Channelx;break;
  63   2                      case 6 : PWM6T1 = 0x0000;PWM6T2 = PWM_Buf*PWM_Pre;PWM6CR= 0x80|PWMx->PWM_Channelx;break;
  64   2                      case 7 : PWM7T1 = 0x0000;PWM7T2 = PWM_Buf*PWM_Pre;PWM7CR= 0x80|PWMx->PWM_Channelx;break;
  65   2                      default:break;
  66   2              }
  67   1              P_SW2 = 0x00;                                                                                                                           //Disallow Access to Extended RAM (STC Added)|禁止访问扩展RAM（STC新增）
  68   1              PWMCR = 0x80;                               //Start PWM module|启动PWM模块
  69   1      }
  70          
  71          //========================================================================
  72          // Function:void PWM_PCA_Output(unsigned char PWM_Number,PWM_InitTypeDef *PWMx)|函数: void PWM_PCA_Output(
             -unsigned char PWM_Number,PWM_InitTypeDef *PWMx)
  73          // Description:PWM_PCA module output function|描述: PWM_PCA模块输出函数
  74          // Parameters: PWM_Number (PWM module number parameter range: 0-3)
  75          //             * PWMx: See PWM.h for details
  76          // 参数: PWM_Number             (PWM模块编号 参数范围：0~3)
  77          //       *PWMx：详情见PWM.h
  78          //       
  79          //       
  80          // Return:|返回: 
  81          // Version:VER1.0.0|版本: VER1.0.0
  82          // Date:2021-04-16|日期: 2021-04-16
  83          // Author: sky-vocality|作者: sky-vocality
  84          // Note:|备注:
  85          //      
  86          //      
  87          //      
  88          //      
  89          //      
  90          //========================================================================
  91          void PWM_PCA_Output(unsigned char PWM_Number,PWM_InitTypeDef *PWMx)
  92          { 
  93   1              unsigned int PWM_Buf = 0, PWM_out = 0;
  94   1              float PWM_Pre = 0,PWM_Value;
  95   1              PWM_Buf = 255 - (unsigned int)(24000000 / (PWMx->PWM_Frequency *256));
  96   1              PWM_Value = 1000 - PWMx->PWM_Value;
  97   1              PWM_Pre = (PWM_Value/1000);
  98   1              PWM_out = (int)(255 * PWM_Pre);
  99   1              CCON = 0x00;
 100   1              CMOD = 0x0d;
 101   1              CL = 0;
 102   1              CH = 0;
 103   1              switch(PWMx->PWM_Channelx)
 104   1              {
 105   2                      case 0x00 : P_SW1 = 0x00;break;
 106   2                      case 0x08 : P_SW1 = 0x10;break;
 107   2                      case 0x10 : P_SW1 = 0x20;break;
 108   2                      default:break;
 109   2              }
 110   1              switch(PWM_Number)
 111   1              {
 112   2                      case 0 : CCAPM0 = 0x42;PCA_PWM0 = 0x00;CCAP0L = (unsigned char)PWM_out;CCAP0H = (unsigned char)PWM_out;b
             -reak;
 113   2                      case 1 : CCAPM1 = 0x42;PCA_PWM1 = 0x00;CCAP1L = (unsigned char)PWM_out;CCAP1H = (unsigned char)PWM_out;b
C51 COMPILER V9.59.0.0   PWM                                                               04/17/2021 21:56:59 PAGE 3   

             -reak;
 114   2                      case 2 : CCAPM2 = 0x42;PCA_PWM2 = 0x00;CCAP2L = (unsigned char)PWM_out;CCAP2H = (unsigned char)PWM_out;b
             -reak;
 115   2                      case 3 : CCAPM3 = 0x42;PCA_PWM3 = 0x00;CCAP3L = (unsigned char)PWM_out;CCAP3H = (unsigned char)PWM_out;b
             -reak;
 116   2                      default:break;
 117   2              }
 118   1              CR = 1;
 119   1      }
 120          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1076    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
