C51 COMPILER V9.60.0.0   LMV358                                                            04/12/2021 22:40:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LMV358
OBJECT MODULE PLACED IN .\Objects\LMV358.obj
COMPILER INVOKED BY: E:\KEIL5\C51\BIN\C51.EXE Core\Src\LMV358.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Core\Inc) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\LMV358.lst) TABS(2) OBJECT(.\Objects\LMV358.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    LMV358.c
   4            * @author  NULL(基于PineconePi(基于宏晶科技STC15库函数进行修改)库函数进行修改)
   5            * @version V1.0.0
   6            * @date    12-April-2021
   7            * @brief  This file is used for config LMV358
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            *
  12            *  
  13            * 
  14            * 
  15            ******************************************************************************
  16          **/
  17          #include "LMV358.h"
  18          //========================================================================
  19          // Function:void LMV358_start
  20          // Description:start the LMV358|描述: ??LMV358??
  21          // Parameter:NONE
  22          //       
  23          //       
  24          // Return:|返回: 
  25          // Version:VER1.0.0|版本: VER1.0.0
  26          // Date:2021-04-12|日期: 2021-4-12
  27          // Author: NULL|作者: NULL
  28          // Note:|备注:
  29          //  
  30          //  
  31          //  
  32          //  
  33          //  
  34          //========================================================================
  35          void LMV358_start()
  36          {
  37   1        ADC_InitTypeDef ADC_Init;
  38   1        ADC_Init.ADC_Px=ADC_P10;
  39   1        ADC_Init.ADC_Speed=ADC_180T;
  40   1        ADC_Init.ADC_Power=ENABLE;
  41   1        ADC_Init.ADC_AdjResult=ADC_RES_H2L8;
  42   1        ADC_Init.ADC_Polity=PolityHigh;
  43   1        ADC_Init.ADC_Interrupt=ENABLE;
  44   1        ADC_Inilize(&ADC_Init);
  45   1      }
  46          //========================================================================
  47          // Function:void LMV358_start
  48          // Description:Do data processing of ADC acquisition|描述: ????????
  49          // Parameter:unsigned char k  |??:adc???  P1.x
  50          //       
  51          //       
  52          // Return:|返回: 
  53          // Version:VER1.0.0|版本: VER1.0.0
  54          // Date:2021-04-12|日期: 2021-4-12
C51 COMPILER V9.60.0.0   LMV358                                                            04/12/2021 22:40:56 PAGE 2   

  55          // Author: NULL|作者: NULL
  56          // Note:|备注:
  57          //  
  58          //  
  59          //  
  60          //  
  61          //  
  62          //========================================================================
  63          unsigned int get_adc_averge(unsigned char k)
  64          {
  65   1        unsigned char cnt=0;
  66   1        unsigned int sum=0;
  67   1        unsigned char i,j;
  68   1        unsigned int temp=0;
  69   1        unsigned int data_temp[times]={0};
  70   1        
  71   1        unsigned char tem[5]={0};
  72   1        
  73   1        for (cnt=0;cnt<times;cnt++)
  74   1        {
  75   2          data_temp[cnt] = Get_ADC10bitResult(k);
  76   2          Delay_Us(100);
  77   2        }
  78   1        
  79   1        for (j=0;j<times-1;j++)
  80   1        {
  81   2          for (i=0;i<times-j-1;i++)
  82   2          {
  83   3             if (data_temp[i]>data_temp[i+1] )
  84   3             {
  85   4                temp = data_temp[i];
  86   4                data_temp[i] = data_temp[i+1];
  87   4                data_temp[i+1] = temp;
  88   4             }
  89   3           }
  90   2         }
  91   1        
  92   1         for(cnt=1;cnt<times-1;cnt++)
  93   1           sum += data_temp[cnt];
  94   1      
  95   1       return (sum/(times-2));
  96   1      }
  97          
  98          
  99          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----      41
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
