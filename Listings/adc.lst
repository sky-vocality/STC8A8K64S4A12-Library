C51 COMPILER V9.60.0.0   ADC                                                               04/12/2021 22:40:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\adc.obj
COMPILER INVOKED BY: E:\KEIL5\C51\BIN\C51.EXE Core\Src\adc.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Core\Inc) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\adc.lst) TABS(2) OBJECT(.\Objects\adc.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    adc.h
   4            * @author  sky-vocality(基于PineconePi(基于宏晶科技STC15库函数进行修改))
   5            * @version V1.0.0
   6            * @date    13-March-2021
   7            * @brief  This file is used to configure ADC
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            *
  12            *
  13            *  
  14            * 
  15            * 
  16            * 
  17            * 
  18            *
  19            * 
  20            ******************************************************************************
  21          **/
  22          
  23          #include "adc.h"
  24          #include "intrins.h"
  25          
  26          /********************* ADC Interrput Function************************/
  27          void ADC_int (void) interrupt 5
  28          {
  29   1        ADC_CONTR &= ~ADC_FLAG;
  30   1      }
  31          
  32          //========================================================================
  33          // Function:void  ADC_Inilize(ADC_InitTypeDef *ADCx)|函数: void ADC_Inilize(ADC_InitTypeDef *ADCx)
  34          // Description:ADC initializer|描述: ADC初始化程序.
  35          // Parameter:Refer to the structure definition in adc.h.|参数: 请参考adc.h里面的结构体定义
  36          //       
  37          //       
  38          // Return: |返回: 
  39          // Version: |版本: VER1.0.0
  40          // Date:2021-03-13|日期: 2021-03-13
  41          // Author:sky-vocality |作者: sky-vocality
  42          // Note: |备注:
  43          //  
  44          //  
  45          //  
  46          //  
  47          //  
  48          //========================================================================
  49          void ADC_Inilize(ADC_InitTypeDef *ADCx)
  50          {
  51   1        EA = 1;
  52   1        
  53   1        P1M0 = 0x00;
  54   1        P1M1 |= ADCx->ADC_Px;
C51 COMPILER V9.60.0.0   ADC                                                               04/12/2021 22:40:56 PAGE 2   

  55   1        ADC_CONTR = (ADC_CONTR & ~ADC_90T) | ADCx->ADC_Speed;
  56   1        if(ADCx->ADC_Power == ENABLE) ADC_CONTR |= 0x80;
  57   1        else              ADC_CONTR &= 0x7F;
  58   1        if(ADCx->ADC_AdjResult == ADC_RES_H2L8) ADCCFG |=  (1<<5);  //The high 2 bits of 10-bit AD results are pla
             -ced in the low 2 bits of ADC_RES and the low 8 bits in ADC_RESL.|10位AD结果的高2位放ADC_RES的低2位，低8位在ADC_RESL。
  59   1        else                  ADCCFG &= ~(1<<5);  //ADC_RES is the highest 8 bits of 10-bit AD results and the lowest 2 bit
             -s are the lowest 2 bits of ADC_RESL results.|10位AD结果的高8位放ADC_RES，低2位在ADC_RESL的低2位。
  60   1        if(ADCx->ADC_Interrupt == ENABLE) EADC = 1;     //Interrupt enable|中断允许   ENABLE,DISABLE
  61   1        else                EADC = 0;
  62   1        if(ADCx->ADC_Polity == PolityHigh)  PADC = 1;   //Priority Setting|优先级设置 PolityHigh,PolityLow
  63   1        else                PADC = 0;
  64   1      }
  65          
  66          
  67          //========================================================================
  68          // Function:void ADC_PowerControl(unsigned char pwr)|函数: void ADC_PowerControl(unsigned char pwr)
  69          // Description:ADC power control program.|描述: ADC电源控制程序.
  70          // Parameter:Pwr: power control,ENABLE OR DISABLE.|参数: Pwr: 电源控制,ENABLE或DISABLE.
  71          //       
  72          //       
  73          // Return:|返回: 
  74          // Version:VER1.0.0|版本: VER1.0.0
  75          // Date:2021-03-13|日期: 2021-03-13
  76          // Author: sky-vocality|作者: sky-vocality
  77          // Note:|备注:
  78          //  
  79          //  
  80          //  
  81          //  
  82          //  
  83          //========================================================================
  84          void ADC_PowerControl(unsigned char Pwr)
  85          {
  86   1        if(Pwr == ENABLE) ADC_CONTR |= 0x80;
  87   1        else        ADC_CONTR &= 0x7f;
  88   1      }
  89          
  90          //========================================================================
  91          // Function:unsigned int Get_ADC10bitResult(unsigned char channel)|函数: unsigned int Get_ADC10bitResult(u
             -nsigned char channel)
  92          // Description:Query the ADC results once.|描述: 查询一次ADC结果.
  93          // Parameter: Select the ADC to convert. |参数: Channel: 选择要转换的ADC.
  94          //       
  95          //       
  96          // Return:ADC results.|返回: ADC结果.
  97          // Version:VER1.0.0|:版本: VER1.0.0
  98          // Date:2021-03-13|日期: 2021-03-13
  99          // Author:sky-vocality|作者: sky-vocality
 100          // Note:|备注:
 101          //  
 102          //  
 103          //  
 104          //  
 105          //  
 106          //========================================================================
 107          unsigned int Get_ADC10bitResult(unsigned char Channel)  //Channel = 0~7
 108          {
 109   1        unsigned int  adc;
 110   1        unsigned char i;
 111   1      
 112   1        if(Channel > ADC_CH7) return  1024; //错误,返回1024,调用的程序判断  
 113   1        ADC_RES = 0;
C51 COMPILER V9.60.0.0   ADC                                                               04/12/2021 22:40:56 PAGE 3   

 114   1        ADC_RESL = 0;
 115   1      
 116   1        ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | Channel; 
 117   1        _nop_();  
 118   1          _nop_();  //对ADC_CONTR操作后要2T之后才能访问
 119   1      
 120   1        for(i=0; i<250; i++)    //超时
 121   1        {
 122   2          if(!(ADC_CONTR & ADC_FLAG))
 123   2          {
 124   3            ADC_CONTR &= ~ADC_FLAG;
 125   3            if(ADCCFG &  (1<<5))    //12位AD结果的高4位放ADC_RES的高4位，低8位在ADC_RESL。
 126   3            {
 127   4              adc = (unsigned int)(ADC_RES & 0x0f);
 128   4              adc = (adc << 8) | ADC_RESL;
 129   4            }
 130   3            else    //12位AD结果的高8位放ADC_RES，低4位在ADC_RESL的低4位。
 131   3            {
 132   4              adc = (int)ADC_RES << 8;
 133   4              adc |= (int)ADC_RESL;
 134   4              adc = adc>>4;
 135   4            }
 136   3            return  adc;
 137   3          }
 138   2        }
 139   1        return  1024; //错误,返回1024,调用的程序判断
 140   1      }
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    249    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
